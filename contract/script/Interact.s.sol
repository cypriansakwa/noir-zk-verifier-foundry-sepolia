// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.17;

import {Script} from "forge-std/Script.sol";
import {console} from "forge-std/console.sol";
import {HonkVerifier} from "../Verifier.sol";

contract InteractHonkVerifier is Script {
    // Replace with your actual deployed address
    address constant VERIFIER_ADDRESS = 0x3e96C09d2361d27D577f18BD20Aa5A86CB313AB0;

    function run() external {
        vm.startBroadcast();

        HonkVerifier verifier = HonkVerifier(VERIFIER_ADDRESS);

        // Load the proof file generated by Noir (bb prove)
        bytes memory proof = vm.readFileBinary("../circuits/target/proof");

        // Public input array (adjust length as needed)
       bytes32[] memory publicInputs = new bytes32[](2);
        publicInputs[0] = bytes32(uint256(3));
        publicInputs[1] = bytes32(uint256(6));

        // Run verification
        bool result = verifier.verify(proof, publicInputs);
        console.log("Verification result:", result);
    }
}
